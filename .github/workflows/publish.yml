name: Publish

on:
  release:
    types:
      - created
    paths-ignore:
      - "docs/**"
jobs:
  test:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      #----------------------------------------------
      #       Install & Configure Poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv 
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
    #----------------------------------------------
    #              run test suite
    #----------------------------------------------
      - name: Publish the package
        run: |
          source .venv/bin/activate
          pytest tests/
          chmod 755 scripts/publish.sh
          bash scripts/publish.sh ${{ secrets.PYPI_PASSWORD }}

          
        # coverage report | NOT using coverage.py atm | More: https://pypi.org/project/coverage/